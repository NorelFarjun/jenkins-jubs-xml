<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1239.v71b_b_a_124a_725">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2114.v2654ca_721309"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2114.v2654ca_721309">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2801.vf82a_b_b_e3e8a_5">
    <script>pipeline {
    agent any
    tools{
        terraform &apos;terraform-11&apos;
    }
    environment{
        AWS_ACCESS_KEY_ID=credentials(&apos;Accecs_key_ID&apos;)
        AWS_SECRET_ACCESS_KEY=credentials(&apos;Seceret_accsess_key&apos;)
        AWS_REGION=&quot;us-east-2&quot;
        TF_VAR_availability_zone_a=&quot;$AWS_REGION&quot;+&quot;a&quot;
        TF_VAR_availability_zone_b=&quot;$AWS_REGION&quot;+&quot;b&quot;
        TF_VAR_project_name=&quot;testing&quot;
        TF_VAR_image=&quot;https://hub.docker.com/repository/docker/norelfarjun/python80&quot;
    }

    stages {
        
        stage(&apos;clean workspace&apos;) {
            steps {
                cleanWs()
            }
        }
        
        stage(&apos;git pull&apos;) {
            steps {
                sh &quot;git init&quot;
                sh &quot;git pull https://github.com/NorelFarjun/aws-terraform-ecs.git&quot;
                sh &quot;ls -la&quot;
            }
        }
        
        stage(&apos;terraform init and plan&apos;) {
            steps {
                sh &quot;terraform init -no-color&quot;
                sh &quot;terraform plan -no-color&quot;
            }
        }
        stage(&apos;test&apos;) {
            steps {
                sh &quot;echo test scrips&quot;
            }
        }
        
        stage(&apos;terraform apply&apos;) {
            steps {
                sh &apos;echo terraform apply&apos;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>